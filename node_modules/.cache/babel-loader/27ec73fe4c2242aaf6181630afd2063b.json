{"ast":null,"code":"var _jsxFileName = \"/Users/diana.barrios/Desktop/pruebas/FirstReactApp/src/components/ImgRecognition.jsx\";\nimport React from \"react\"; //import firebase from '../firebase.js'\n\nconst firebase = require(\"../firebase.js\");\n\nconst db = firebase.db;\nconst st = firebase.storage; //const db = firebase.firestore();\n//const st = firebase.storage();\n\nclass ImgRecognition extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      time: \"\",\n      date: \"\",\n      name: \"\"\n    };\n    this.watchData = this.watchData.bind(this);\n  }\n\n  watchData() {\n    let me = this;\n    let query = db.collection(\"PersonsCount\").orderBy(\"timestamp\", \"desc\").limit(1);\n    let observer = query.onSnapshot(querySnapshot => {\n      console.log(\"Received query snapshot of size \".concat(querySnapshot.size));\n      let data = querySnapshot.docs[0].data();\n      console.log(data);\n      var storage = firebase.storage();\n      var pathReference = storage.ref('smiles-ai-images/${data.name}');\n      me.setState({\n        count: data.count,\n        time: data.timestamp.toDate().toLocaleTimeString(\"en-US\"),\n        date: data.timestamp.toDate().toLocaleDateString(\"en-US\"),\n        name: data.name\n      });\n    }, err => {\n      console.log(\"Encountered error: \".concat(err));\n    });\n  }\n\n  componentDidMount() {\n    this.watchData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Image Recognition:\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"There are \", this.state.count, \" persons in this picture.\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Date: \", this.state.date), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Time: \", this.state.time)), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Picture: \", this.state.name), React.createElement(\"img\", {\n      src: \"\",\n      class: \"img-fluid\",\n      alt: \"Responsive image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ImgRecognition;\n/*\n- Research about Prettier and integrate with Visual Studio Code\n- Invite lyu to repo\n- React Tutorial \n- Incorporate in your app\n- bonus: how to develop cloud functions locally\n*/","map":{"version":3,"sources":["/Users/diana.barrios/Desktop/pruebas/FirstReactApp/src/components/ImgRecognition.jsx"],"names":["React","firebase","require","db","st","storage","ImgRecognition","Component","constructor","props","state","count","time","date","name","watchData","bind","me","query","collection","orderBy","limit","observer","onSnapshot","querySnapshot","console","log","size","data","docs","pathReference","ref","setState","timestamp","toDate","toLocaleTimeString","toLocaleDateString","err","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n//import firebase from '../firebase.js'\nconst firebase = require(\"../firebase.js\");\nconst db = firebase.db;\nconst st = firebase.storage;\n\n//const db = firebase.firestore();\n//const st = firebase.storage();\n\nclass ImgRecognition extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      time: \"\",\n      date: \"\",\n      name: \"\"\n    };\n    this.watchData = this.watchData.bind(this);\n  }\n\n  watchData() {\n    let me = this;\n    let query = db\n      .collection(\"PersonsCount\")\n      .orderBy(\"timestamp\", \"desc\")\n      .limit(1);\n    let observer = query.onSnapshot(\n      querySnapshot => {\n        console.log(`Received query snapshot of size ${querySnapshot.size}`);\n\n        let data = querySnapshot.docs[0].data();\n        console.log(data);\n       \n        var storage = firebase.storage();\n        var pathReference = storage.ref('smiles-ai-images/${data.name}');\n\n\n\n\n        me.setState({\n          count: data.count,\n          time: data.timestamp.toDate().toLocaleTimeString(\"en-US\"),\n          date: data.timestamp.toDate().toLocaleDateString(\"en-US\"),\n          name: data.name\n        });\n      },\n      err => {\n        console.log(`Encountered error: ${err}`);\n      }\n    );\n  }\n\n  componentDidMount() {\n    this.watchData();\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <h1>Image Recognition:</h1>\n          <h2>There are {this.state.count} persons in this picture.</h2>\n          <h3>Date: {this.state.date}</h3>\n          <h3>Time: {this.state.time}</h3>\n        </div>\n\n        <div className=\"container\">\n          <h3>Picture: {this.state.name}</h3>\n          <img src=\"\" class=\"img-fluid\" alt=\"Responsive image\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ImgRecognition;\n\n/*\n- Research about Prettier and integrate with Visual Studio Code\n- Invite lyu to repo\n- React Tutorial \n- Incorporate in your app\n- bonus: how to develop cloud functions locally\n*/\n"]},"metadata":{},"sourceType":"module"}