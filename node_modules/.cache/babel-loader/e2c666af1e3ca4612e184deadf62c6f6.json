{"ast":null,"code":"var _jsxFileName = \"/Users/diana.barrios/Desktop/pruebas/FirstReactApp/src/components/ImgRecognition.jsx\";\nimport React from 'react';\n\nconst firebase = require('../firebase.js');\n\nconst db = firebase.db;\nconst st = firebase.storage;\n\nclass ImgRecognition extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: '',\n      date: '',\n      time: '',\n      count: 0\n    };\n    this.watchData = this.watchData.bind(this);\n  }\n\n  watchData() {\n    let doc = db.collection('cities').doc('SF');\n    let observer = doc.onSnapshot(docSnapshot => {\n      console.log(\"Received doc snapshot: \".concat(docSnapshot)); // ...\n    }, err => {\n      console.log(\"Encountered error: \".concat(err));\n    }); // let query = db.collection('PersonsCount').get();\n    // let observer = query.then(querySnapshot => {\n    //     console.log(`Received query snapshot of size ${querySnapshot.size}`);\n    //     var pics = [];\n    //     querySnapshot.forEach(doc => {\n    //         console.log(doc.id, '=>', doc.data());\n    //         pics.push(doc.data().count);\n    //       });\n    // }, err => {\n    //     console.log(`Encountered error: ${err}`);\n    // });\n  }\n\n  componentDidMount() {\n    this.watchData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Image Recognition:\")));\n  }\n\n}\n\nexport default ImgRecognition;","map":{"version":3,"sources":["/Users/diana.barrios/Desktop/pruebas/FirstReactApp/src/components/ImgRecognition.jsx"],"names":["React","firebase","require","db","st","storage","ImgRecognition","Component","constructor","props","state","image","date","time","count","watchData","bind","doc","collection","observer","onSnapshot","docSnapshot","console","log","err","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,gBAAD,CAAxB;;AACA,MAAMC,EAAE,GAAGF,QAAQ,CAACE,EAApB;AACA,MAAMC,EAAE,GAAGH,QAAQ,CAACI,OAApB;;AAEA,MAAMC,cAAN,SAA6BN,KAAK,CAACO,SAAnC,CAA6C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,KAAK,EAAE;AAJE,KAAb;AAMA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACH;;AAEFD,EAAAA,SAAS,GAAE;AACN,QAAIE,GAAG,GAAGd,EAAE,CAACe,UAAH,CAAc,QAAd,EAAwBD,GAAxB,CAA4B,IAA5B,CAAV;AAEA,QAAIE,QAAQ,GAAGF,GAAG,CAACG,UAAJ,CAAeC,WAAW,IAAI;AACzCC,MAAAA,OAAO,CAACC,GAAR,kCAAsCF,WAAtC,GADyC,CAE7C;AACC,KAHc,EAGZG,GAAG,IAAI;AACVF,MAAAA,OAAO,CAACC,GAAR,8BAAkCC,GAAlC;AACC,KALc,CAAf,CAHM,CAUN;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACH;;AAGCC,EAAAA,iBAAiB,GAAE;AACjB,SAAKV,SAAL;AACH;;AAEHW,EAAAA,MAAM,GAAE;AACN,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADJ,CADJ;AAWD;;AAzD0C;;AA6D7C,eAAepB,cAAf","sourcesContent":["import React from 'react';\nconst firebase = require('../firebase.js');\nconst db = firebase.db;\nconst st = firebase.storage;\n\nclass ImgRecognition extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            image: '',\n            date: '',\n            time: '',\n            count: 0,\n        }\n        this.watchData = this.watchData.bind(this);\n    }\n\n   watchData(){\n        let doc = db.collection('cities').doc('SF');\n\n        let observer = doc.onSnapshot(docSnapshot => {\n            console.log(`Received doc snapshot: ${docSnapshot}`);\n        // ...\n        }, err => {\n        console.log(`Encountered error: ${err}`);\n        });\n\n        // let query = db.collection('PersonsCount').get();\n        \n        // let observer = query.then(querySnapshot => {\n        //     console.log(`Received query snapshot of size ${querySnapshot.size}`);\n            \n        //     var pics = [];\n\n        //     querySnapshot.forEach(doc => {\n        //         console.log(doc.id, '=>', doc.data());\n        //         pics.push(doc.data().count);\n        //       });\n          \n        // }, err => {\n        //     console.log(`Encountered error: ${err}`);\n        // });\n    }\n\n    \n      componentDidMount(){\n        this.watchData();\n    }\n    \n  render(){\n    return (\n        <div>\n            <div className=\"container\">\n                <h1>\n                Image Recognition:\n                </h1>\n            </div>\n\n            \n        </div>\n    );\n  }\n\n}\n\nexport default ImgRecognition;"]},"metadata":{},"sourceType":"module"}